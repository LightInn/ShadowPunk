[gd_scene load_steps=3 format=3 uid="uid://cwwigoboexg6b"]

[sub_resource type="GDScript" id="GDScript_dm1lw"]
script/source = "extends Node3D

@export var camera: Camera3D

func _input(event):
	if Input.is_mouse_button_pressed(MOUSE_BUTTON_LEFT):
		if event is InputEventMouseMotion:
			var rx = rotation.x - event.relative.y / 30
			#rotation.x = clamp(rx, -PI / 2, PI / 2)
			rotation.y -= event.relative.x / 30

	if Input.is_mouse_button_pressed(MOUSE_BUTTON_RIGHT):
		if event is InputEventMouseMotion:
			translate_object_local(Vector3(-event.relative.x, event.relative.y, 0) * camera.size / 160)
"

[sub_resource type="GDScript" id="GDScript_svh0u"]
script/source = "extends Camera3D

func _input(event):
	if Input.is_mouse_button_pressed(MOUSE_BUTTON_MIDDLE):
		if event is InputEventMouseMotion:
			if event.relative.y > 0:
				size *= 1. + event.relative.y / 30
			else:
				size /= 1. - event.relative.y / 30

	if event is InputEventMouseButton:
		if event.button_index == MOUSE_BUTTON_WHEEL_UP:
			size *= .93
		if event.button_index == MOUSE_BUTTON_WHEEL_DOWN:
			size /= .93
"

[node name="Orbit" type="Node3D" node_paths=PackedStringArray("camera")]
transform = Transform3D(1, 0, 0, 0, 0.882948, 0.469472, 0, -0.469472, 0.882948, 0, 0.2, 0)
script = SubResource("GDScript_dm1lw")
camera = NodePath("Camera3D")

[node name="Camera3D" type="Camera3D" parent="."]
transform = Transform3D(0.490496, -0.599715, 0.632262, 0.400366, 0.799511, 0.447759, -0.774029, 0.0335123, 0.632262, 11.595, 18.877, 15.7609)
projection = 1
current = true
size = 9.546
near = 10.0
script = SubResource("GDScript_svh0u")
